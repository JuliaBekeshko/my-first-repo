<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>